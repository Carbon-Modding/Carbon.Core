name: Preview Build
concurrency: build-2-preview

on:
  workflow_dispatch:
    inputs:
      staging:
        description: "Staging Branch"
        required: false
        default: "false"
        type: choice
        options:
          - "false"
          - "true"
jobs:
  bootstrap:
    name: ü•æ Bootstrap
    runs-on: ubuntu-latest

    outputs:
      date: ${{ steps.step1.outputs.date }}
      clock: ${{ steps.step1.outputs.clock }}
      tag: ${{ steps.step1.outputs.tag }}
      ref: ${{ steps.step1.outputs.ref }}
      version: ${{ steps.step1.outputs.version }}

    steps:
      - name: üîó Checkout source code from github
        uses: actions/checkout@v3
        with:
          ref: preview

      - name: üìÖ Prepare the environment
        id: step1
        run: |
          echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "clock=$(date +'%H:%M:%S')" >> $GITHUB_OUTPUT
          echo "tag=$(date +'%Yd%j')" >> $GITHUB_OUTPUT
          echo "ref=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "version=2.2.$(curl -s -L 'https://carbonmod.gg/version?id=preview&token=${{secrets.VERSIONS_TOKEN}}')" >> $GITHUB_OUTPUT

  build:
    name: üêß Linux
    needs: bootstrap
    runs-on: ubuntu-latest
    container: rust:bullseye
    continue-on-error: false

    outputs:
      artifact: build-preview-${{ needs.bootstrap.outputs.ref }}-linux
      build_info: Built at ${{ needs.bootstrap.outputs.date }} ${{ needs.bootstrap.outputs.clock }} based on commit ${{ needs.bootstrap.outputs.ref }}.

    steps:
      - name: üîó Checkout source code from github
        uses: actions/checkout@v3
        with:
          ref: preview
          token: ${{ secrets.PAT_ALL_REPO }}
          submodules: recursive
          
      - name: üî® Rust update
        shell: bash
        run: |
          apt update
          apt install -y mingw-w64
          
          rustup install stable
          rustup default stable
          rustup target add x86_64-pc-windows-gnu
          rustup component add rust-std --target x86_64-pc-windows-gnu
          rustup show
          rustc --print sysroot
          
          which x86_64-w64-mingw32-dlltool || echo "dlltool not found"
          x86_64-w64-mingw32-dlltool --version

      - name: üõ§Ô∏è Setup the dotnet build environment
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.0.406

      - uses: dtolnay/rust-toolchain@stable
      - uses: ClementTsang/cargo-action@v0.0.3
        with:
          command: build
          args: -r --target x86_64-unknown-linux-gnu
          directory: Carbon.Core/Carbon.Native
          
      - uses: dtolnay/rust-toolchain@stable
      - uses: ClementTsang/cargo-action@v0.0.3
        with:
          command: build
          args: -r --target x86_64-pc-windows-gnu
          directory: Carbon.Core/Carbon.Native

      - name: üî® Setup the Carbon build environment
        shell: bash
        run: |
          dotnet run --project Carbon.Core/Carbon.Tools/Carbon.Runner Tools/Build/runners/bootstrap.cr

      - name: üî® Setup the Carbon build environment (Staging)
        shell: bash
        run: |
          ${GITHUB_WORKSPACE}/Tools/Build/linux/update_staging.sh
        if: ${{ inputs.staging == 'true' }}

      - name: üêß Built Carbon on Linux
        shell: bash
        run: |
          export VERSION=${{ needs.bootstrap.outputs.version }}
          dotnet run --project Carbon.Core/Carbon.Tools/Carbon.Runner Tools/Build/runners/build.cr Debug PREVIEW preview_build
          dotnet run --project Carbon.Core/Carbon.Tools/Carbon.Runner Tools/Build/runners/build.cr DebugUnix PREVIEW preview_build
          dotnet run --project Carbon.Core/Carbon.Tools/Carbon.Runner Tools/Build/runners/build.cr Minimal PREVIEW preview_build
          dotnet run --project Carbon.Core/Carbon.Tools/Carbon.Runner Tools/Build/runners/build.cr MinimalUnix PREVIEW preview_build

      - name: ‚¨ÜÔ∏è Upload the artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-preview
          path: |
            Release/Carbon.Linux.Debug.tar.gz
            Release/Carbon.Linux.Debug.info
            Release/Carbon.Linux.Minimal.tar.gz
            Release/Carbon.Linux.Minimal.info

  # RELEASE --------------------------------------------------------------------
  release-on-schedule:
    name: üíæ Preview Release
    needs: ["bootstrap", "build"]
    runs-on: ubuntu-22.04
    if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: üóëÔ∏è Delete existing release tag
        uses: dev-drprasad/delete-tag-and-release@92d94d77429cb0436597047a92369526a5824f50
        with:
          delete_release: true
          tag_name: preview_build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üí§ Sleep for 5 seconds
        run: sleep 5s
        shell: bash

      - name: ‚¨áÔ∏è Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: Release

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: Release

      - name: üè∑Ô∏è Update release tag
        uses: softprops/action-gh-release@a92196038060e0c673cf3ba5b98710dd716731df
        with:
          draft: false
          prerelease: true
          tag_name: preview_build
          name: "Preview Build ‚Äî v${{ needs.bootstrap.outputs.version }}"
          body: |
            This is a manually triggered development build of Carbon based on the `preview` branch which includes pre-production changes and upcoming features (for testing purposes).
                    
            This build is targeted at developers.
            The general public is advised to use one of the [stable] builds.
            Since it's manually triggered, we're confident you should use this build to test out the latest Carbon changes.

            ### How to install
            1. Download the `Carbon.[Windows|Linux].Debug` archive from the attachments below.
            2. Unzip the archive to the root of your Rust Dedicated Server.
            3. Restart the server and enjoy.

            ${{ needs.build-linux.outputs.build_info }}

            [stable]: https://github.com/CarbonCommunity/Carbon.Core/releases/latest
          files: |
            Release/build-preview/Carbon.Linux.Debug.info
            Release/build-preview/Carbon.Linux.Debug.tar.gz
            Release/build-preview/Carbon.Windows.Debug.info
            Release/build-preview/Carbon.Windows.Debug.zip
            Release/build-preview/Carbon.Linux.Minimal.info
            Release/build-preview/Carbon.Linux.Minimal.tar.gz
            Release/build-preview/Carbon.Windows.Minimal.info
            Release/build-preview/Carbon.Windows.Minimal.zip
